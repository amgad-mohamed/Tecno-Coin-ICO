/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenStaking,
  TokenStakingInterface,
} from "../../contracts/TokenStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adminManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newIcoContract",
        type: "address",
      },
    ],
    name: "IcoContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releasePhase",
        type: "uint256",
      },
    ],
    name: "TokensReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensStaked",
    type: "event",
  },
  {
    inputs: [],
    name: "FIRST_RELEASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECOND_RELEASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "THIRD_RELEASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_STAKING_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adminManager",
    outputs: [
      {
        internalType: "contract AdminManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateAvailableRelease",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalReleased",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_availableForRelease",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_remainingTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "icoContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_icoContract",
        type: "address",
      },
    ],
    name: "setIcoContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "thirdReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109b33803806109b383398101604081905261002f916100d4565b600080546001600160a01b038085166001600160a01b031992831617909255600180549284169290911691909117905542600381905561007290624f1a00610107565b60065560035461008590629e3400610107565b6007556003546100999063013c6800610107565b6008556003546100ad906301e13380610107565b6009555061012e9050565b80516001600160a01b03811681146100cf57600080fd5b919050565b600080604083850312156100e757600080fd5b6100f0836100b8565b91506100fe602084016100b8565b90509250929050565b8082018082111561012857634e487b7160e01b600052601160045260246000fd5b92915050565b6108768061013d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063938da22d116100ad578063b40cd21d11610071578063b40cd21d14610226578063c4e71adc1461024e578063e09678fd14610257578063e33b7de31461026a578063e7c667f11461027357600080fd5b8063938da22d146101e55780639fe17cc2146101ee578063a210b6a414610201578063a96f866814610214578063ae40e0981461021e57600080fd5b806352cd1a96116100f457806352cd1a961461017757806360217267146101885780636abfd183146101a857806372f702f3146101b1578063817b1cd2146101dc57600080fd5b8063016992231461012657806320c6a41e1461014a578063238ef9d81461015c57806326d0b89c14610165575b600080fd5b61013769d3c21bcecceda100000081565b6040519081526020015b60405180910390f35b6101376a4a723dc6b40b8a9a00000081565b61013760095481565b6101376a01a784379d99db4200000081565b61013769a968163f0a57b400000081565b610137610196366004610767565b600a6020526000908152604090205481565b61013760035481565b6000546101c4906001600160a01b031681565b6040516001600160a01b039091168152602001610141565b61013760045481565b61013760075481565b6002546101c4906001600160a01b031681565b6001546101c4906001600160a01b031681565b61021c61027c565b005b610137610502565b61022e6105b1565b604080519485526020850193909352918301526060820152608001610141565b61013760065481565b61021c610265366004610767565b61063f565b61013760055481565b61013760085481565b600154604051635281291160e11b81523360048201526001600160a01b039091169063a502522290602401602060405180830381865afa1580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e89190610797565b61030d5760405162461bcd60e51b8152600401610304906107b9565b60405180910390fd5b6002546001600160a01b031661035c5760405162461bcd60e51b81526020600482015260146024820152731250d3c818dbdb9d1c9858dd081b9bdd081cd95d60621b6044820152606401610304565b6000610366610502565b9050600081116103b85760405162461bcd60e51b815260206004820152601f60248201527f4e6f20746f6b656e7320617661696c61626c6520666f722072656c65617365006044820152606401610304565b600060095442106103cb575060046103f1565b60085442106103dc575060036103f1565b60075442106103ed575060026103f1565b5060015b81600560008282546104039190610814565b909155505060005460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af115801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610797565b6104c55760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610304565b60408051838152602081018390527f06bfc9e66ca14afa6b27c5211d92e2453d2007b51cd69146f7d2b2b5654cf2b9910160405180910390a15050565b60006006544210156105145750600090565b600060065442106105365761053369d3c21bcecceda100000082610814565b90505b60075442106105565761055369a968163f0a57b400000082610814565b90505b6008544210610577576105746a01a784379d99db4200000082610814565b90505b600954421061058e57506a4a723dc6b40b8a9a0000005b600554811161059e5760006105ab565b6005546105ab908261082d565b91505090565b60008060008060006006544210156105cc5750600654610609565b6007544210156105df5750600754610609565b6008544210156105f25750600854610609565b6009544210156106055750600954610609565b5060005b600454600554610617610502565b60008411610626576000610630565b610630428561082d565b94509450945094505090919293565b600154604051635281291160e11b81523360048201526001600160a01b039091169063a502522290602401602060405180830381865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab9190610797565b6106c75760405162461bcd60e51b8152600401610304906107b9565b6001600160a01b03811661071d5760405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642049434f20636f6e74726163742061646472657373000000006044820152606401610304565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f0e25f41ad430d49e339f239e3e5b65082586841d26f58de57e21e5f41f12e90590600090a250565b60006020828403121561077957600080fd5b81356001600160a01b038116811461079057600080fd5b9392505050565b6000602082840312156107a957600080fd5b8151801515811461079057600080fd5b60208082526025908201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206f70657260408201526430ba34b7b760d91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610827576108276107fe565b92915050565b81810381811115610827576108276107fe56fea26469706673582212208f9733af45bf1387730991ac5a63c8eec0ec77d324c17f0719450a4ccbea68ec64736f6c63430008140033";

type TokenStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenStaking__factory extends ContractFactory {
  constructor(...args: TokenStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingToken: AddressLike,
    _adminManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stakingToken,
      _adminManager,
      overrides || {}
    );
  }
  override deploy(
    _stakingToken: AddressLike,
    _adminManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stakingToken,
      _adminManager,
      overrides || {}
    ) as Promise<
      TokenStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenStaking__factory {
    return super.connect(runner) as TokenStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenStakingInterface {
    return new Interface(_abi) as TokenStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenStaking {
    return new Contract(address, _abi, runner) as unknown as TokenStaking;
  }
}
